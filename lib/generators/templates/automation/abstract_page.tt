class AbstractPage
  def raider
    if framework == 'rspec'
      "require_relative '../../helpers/raider'\n"
    else
      "require_relative '../../features/support/helpers/raider'\n"
    end
  end

  def helper_selector
    if automation == 'watir'
      <<~RUBY

        def browser
          Raider::BrowserHelper.browser
        end

      RUBY
    else
      <<-RUBY

  def driver
    Raider::DriverHelper.driver
  end


      RUBY
    end
  end

  def visit
    return unless %w[selenium watir].include? automation

    <<-RUBY


  def visit(*page)
    #{automation == 'selenium' ? 'driver.navigate.to full_url(page.first)' : 'browser.goto full_url(page.first)'}
  end

    RUBY
  end

  def url_methods
    methods = <<-RUBY


  def full_url(*page)
    "#\{base_url}#\{url(*page)}"
  end

  def base_url
    'https://automationteststore.com/'
  end

  def url(_page)
    raise 'Url must be defined on child pages'
  end
    RUBY

    methods if %w[selenium watir].include?(automation)
  end

  def body
    <<~RUBY.gsub(/\n{2}\s{4}/, '')
      require 'rspec'
      #{raider}
      class AbstractPage

        include RSpec::Matchers
        extend Raider::PomHelper
        #{helper_selector}
        #{visit}
        #{url_methods}
      end
    RUBY
  end
end

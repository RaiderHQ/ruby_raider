<% if automation == 'selenium' -%>
  def create_driver(*opts)
    @config = YAML.load_file('config/config.yml')
    browser = @config['browser'].to_sym
    Selenium::WebDriver.for(browser, options: browser_options(*opts))
  end

  def browser_options(*opts)
    opts = opts.empty? ? @config['browser_options'] : opts
    create_options(*opts)
  end

  # :reek:FeatureEnvy
  def create_options(*opts)
    load_browser = @config['browser'].to_s
    browser = load_browser == 'ie' ? load_browser.upcase : load_browser.capitalize
    options = "Selenium::WebDriver::#{browser}::Options".constantize.new
    opts.each { |option| options.add_argument(option) }
    options
  end

<% elsif automation == 'cross_platform' -%>
  def create_driver
    platform = config['platform'].to_s
    @driver = Appium::Driver.new({ caps: caps[platform] })
  end

  def config
     YAML.load_file('config/config.yml')
  end
<% else -%>
  def create_driver
    @driver = Appium::Driver.new({ caps: caps })
  end
<% end -%>